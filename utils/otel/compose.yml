x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"

services:
  app:
    image: aspnetapp:${DOTNET_VERSION:-8.0}
    build:
      context: ../../src/aspnetapp
      args:
        - DOTNET_VERSION=${DOTNET_VERSION:-8.0}
    container_name: app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=5000
      # OpenTelemetry configuration
      - OTEL_SERVICE_NAME=aspnetapp
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      #- OTEL_LOG_LEVEL=debug
    ports:
      - "5000:5000"
    depends_on:
      - jaeger
    logging: *logging
  # Generates request data
  client:
    image: curlimages/curl:${CURL_VERSION:-latest}
    container_name: client
    command:
      [
        "sh",
        "-c",
        "while true; do curl -H 'X-Trace-ID: $${ID}' -sL http://app:5000/api/Sleep?milliseconds=$${RANDOM};echo; done"
      ]
    environment:
      - ID=${ID:-}
      - RANDOM=${RANDOM:-}
    depends_on:
      app:
        condition: service_started
      prometheus:
        condition: service_started
    logging: *logging

  ## MONITORING
  # https://github.com/open-telemetry/opentelemetry-dotnet/blob/main/docs/metrics/getting-started-prometheus-grafana/Program.cs
  # https://github.com/open-telemetry/opentelemetry-dotnet/tree/main/docs/metrics/getting-started-aspnetcore
  jaeger:
    image: jaegertracing/all-in-one:${JAEGER_VERSION:-latest}
    container_name: jaeger
    command:
      - "--memory.max-traces=5000"
    ports:
      - "16686:16686" # Jaeger Web UI
      #- "5775:5775/udp"
      #- "6831:6831/udp"
      #- "6832:6832/udp"
      #- "5778:5778"
      #- "14268:14268"
      - 14269:14269   # Prometheus metrics
      #- "14250:14250"
      #- "9411:9411"
      #- "4317:4317" # Jaeger Collector gRPC
      #- "4318:4318" # Jaeger Collector HTTP (protobuf)
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
      # Service Performance Monitoring (SPM)
      #- METRICS_STORAGE_TYPE=prometheus
      #- PROMETHEUS_SERVER_URL=http://prometheus:9090
      #- PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR=${PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR:-true}
      #- PROMETHEUS_QUERY_NORMALIZE_CALLS=true
      #- PROMETHEUS_QUERY_NORMALIZE_DURATION=true
    deploy:
      resources:
        limits:
          memory: 400M
    logging: *logging
  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION:-latest}
    container_name: prometheus
    volumes:
      - ${PWD}/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.retention.time=1h"
      - "--query.lookback-delta=15s"
      #- "--enable-feature=otlp-write-receiver"
    ports:
      - "9090:9090"
    depends_on:
      - app
    logging: *logging
